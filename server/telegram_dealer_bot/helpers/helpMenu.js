// helperMenu.js
const menuHelp = {
  /* help: {
    description: 'üÜò –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ –º–µ–Ω—é –ø–æ–º–æ—â–∏',
    usage: '/help',
  },*/
  info: {
    description: '‚ÑπÔ∏è –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏',
    usage: '/info',
  },
  contact: {
    description: '‚ùå –£–¥–∞–ª–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É',
    usage: '/delete',
  },
  calculations: {
    description: 'üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞–º–∏',
    usage: '/calculations',
  },
  verification: {
    description: 'üßæ –°–≤–µ—Ä–∫–∞',
    usage: '/verification',
  },
  delivery: {
    description: 'üöö –î–æ—Å—Ç–∞–≤–∫–∞',
    usage: '/delivery_order',
  },
  finances: {
    description: 'üí∞ –§–∏–Ω–∞–Ω—Å—ã',
    usage: '/finances',
  },
  complaint: {
    description: '‚ö†Ô∏èüìÑ‚ùó –†–µ–∫–ª–∞–º–∞—Ü–∏—è',
    usage: '/complaint',
  },
  consultation: {
    description: 'üí¨üí° –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
    usage: '/consultation',
  },
}

async function displayHelpMenu(bot, chatId, userSessions) {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è userSessions[chatId]
  userSessions[chatId] = userSessions[chatId] || {}

  // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (userSessions[chatId].lastMessageId) {
    try {
      await bot.deleteMessage(chatId, userSessions[chatId].lastMessageId)
      console.log(
        `Deleted previous help menu message with ID: ${userSessions[chatId].lastMessageId}`
      )
    } catch (error) {
      console.error(`Failed to delete message: ${error.message}`)
    }
  }

  // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –º–µ–Ω—é –ø–æ–º–æ—â–∏
  const keyboard = Object.values(menuHelp).map((value) => [
    { text: value.description, callback_data: value.usage },
  ])

  const options = {
    reply_markup: {
      inline_keyboard: keyboard,
    },
  }

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é –ø–æ–º–æ—â–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ ID
  const message = await bot.sendMessage(chatId, '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:', options)

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ lastMessageId
  userSessions[chatId].lastMessageId = message.message_id
}

module.exports = {
  menuHelp,
  displayHelpMenu,
}
