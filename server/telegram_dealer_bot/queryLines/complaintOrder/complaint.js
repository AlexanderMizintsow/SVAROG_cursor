const { displayHelpMenu } = require('../../helpers/helpMenu')
const {
  createReminder,
  getMppByCompany,
  getNokOrMppByCompany,
  getOrderItemsAW,
  sendRequest1C,
} = require('../../helpers/api')
const { keyboardCancel, deleteLastMessage } = require('../../helpers/utils.js')
const { getRandomColors } = require('../../helpers/getRandomColors')
const { handleCancel } = require('../../helpers/buttonCancel')

async function handleComplaint(bot, chatId, userSessions, companyInn) {
  userSessions[chatId] = userSessions[chatId] || {}
  // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ä–∞—Å—á–µ—Ç–∞
  await deleteLastMessage(bot, chatId, userSessions)

  const inlineKeyboard = [
    [
      {
        text: 'üÜò –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ –±–µ–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏',
        callback_data: '/complaint_report_problem',
      },
    ],
  ]
  // –ï—Å–ª–∏ companyInn –Ω–µ –ø—É—Å—Ç–æ–π
  if (companyInn) {
    inlineKeyboard.splice(0, 0, [
      {
        text: 'üìÑ‚úçÔ∏è –û—Ñ–æ—Ä–º–∏—Ç—å –Ω–æ–≤—É—é —Ä–µ–∫–ª–∞–º–∞—Ü–∏—é',
        callback_data: '/complaint_new_arrange',
      },
    ])

    inlineKeyboard.splice(1, 0, [
      {
        text: 'üîçüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∞–Ω–Ω—ã—Ö —Ä–µ–∫–ª–∞–º–∞—Ü–∏—è—Ö',
        callback_data: '/complaint_existing',
      },
    ])
  }

  inlineKeyboard.push([{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: '/cancel' }])
  const message = await bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', {
    reply_markup: {
      inline_keyboard: inlineKeyboard,
    },
  })

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ä–∞—Å—á–µ—Ç–∞—Ö
  userSessions[chatId].lastMessageId = message.message_id

  return message
}

// **********************************************
// **********************************************
// **********************************************
// ********************************************** –û—Ñ–æ—Ä–º–∏—Ç—å –Ω–æ–≤—É—é —Ä–µ–∫–ª–∞–º–∞—Ü–∏—é (complaint_new_arrange) ************************************************************************
async function handleComplaintNewArrange(bot, chatId, msg, userSessions, companyInn) {
  userSessions[chatId] = userSessions[chatId] || {}
  if (!userSessions[chatId].complaintDetails) {
    userSessions[chatId].complaintDetails = []
  }

  // –≠–¢–ê–ü 0 - –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞ *********************************************************************************************
  if (!userSessions[chatId].awaitingComplaintNewArrange) {
    userSessions[chatId].awaitingComplaintNewArrange = 0.5
    //await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ 1–°', keyboardCancel)

    if (!userSessions[chatId].selectedYear || userSessions[chatId].selectedYear != '2025') {
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      userSessions[chatId].selectedYear = 'bd_2025_years'.split('_')[1]
    }

    const message = await bot.sendMessage(
      chatId,
      `–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ 1–° (${userSessions[chatId].selectedYear}–≥.), –ª–∏–±–æ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ–¥ –∑–∞–∫–∞–∑–∞, –µ—Å–ª–∏ –æ–Ω –±—ã–ª —Å–¥–µ–ª–∞–Ω —Ä–∞–Ω–µ–µ.`,
      {
        reply_markup: {
          inline_keyboard: [
            [
              { text: '2024', callback_data: 'bd_2024_years' },
              { text: '2023', callback_data: 'bd_2023_years' },
              { text: '2022', callback_data: 'bd_2022_years' },
              { text: '2021', callback_data: 'bd_2021_years' },
            ],
            [{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: '/cancel' }],
          ],
        },
      }
    )
    userSessions[chatId].messageId = message.message_id

    return
  }

  if (userSessions[chatId].awaitingComplaintNewArrange === 0.5) {
    userSessions[chatId].awaitingComplaintNewArrange = 1

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ msg –∏ –º–æ–∂–Ω–æ –ª–∏ –µ–≥–æ —Ä–∞–∑–±–∏—Ç—å
    if (msg && typeof msg === 'string' && msg.split('_').length > 1) {
      userSessions[chatId].selectedYear = msg.split('_')[1]
    } else {
      userSessions[chatId].selectedYear = 'bd_2025_years'.split('_')[1]
    }

    const message = await bot.sendMessage(
      chatId,
      `–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ 1–° (${userSessions[chatId].selectedYear}–≥.)`,
      keyboardCancel
    )

    userSessions[chatId].messageId = message.message_id

    return
  }

  // –≠–¢–ê–ü 1 - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞ –∏ –≤—ã–≤–æ–¥ –∏–∑–¥–µ–ª–∏–π **************************************************************************
  if (userSessions[chatId].awaitingComplaintNewArrange === 1) {
    if (!userSessions[chatId].getOrderItems1C) {
      //const orderItems = await getOrderItems1C(msg.text);
      const orderItemsAW = await getOrderItemsAW(
        msg.text,
        companyInn,
        userSessions[chatId].selectedYear
      )
      userSessions[chatId].OrderNo = msg.text
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–∑–¥–µ–ª–∏–π
      if (!orderItemsAW || !orderItemsAW.result || orderItemsAW.result.length === 0) {
        await bot.sendMessage(chatId, '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–∑–¥–µ–ª–∏—è –ø–æ –¥–∞–Ω–Ω–æ–º—É –Ω–æ–º–µ—Ä—É –∑–∞–∫–∞–∑–∞.')
        await bot.deleteMessage(chatId, userSessions[chatId].messageId)
        handleCancel(bot, chatId, userSessions)
        return // –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ –∏–∑–¥–µ–ª–∏–π –Ω–µ—Ç
      }
      await bot.deleteMessage(chatId, userSessions[chatId].messageId)

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫
      const itemNames = orderItemsAW.result.map((item) => item.NAME)

      console.log(itemNames)

      userSessions[chatId].complaintDetailsAllItem = itemNames
    }
    userSessions[chatId].getOrderItems1C = false

    const existingItems = userSessions[chatId].complaintDetails.map((detail) => detail.item)
    const availableItems = userSessions[chatId].complaintDetailsAllItem.filter(
      (item) => !existingItems.includes(item)
    )

    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
    const keyboard = availableItems.map((item) => [{ text: item, callback_data: item }])
    const options = {
      reply_markup: {
        inline_keyboard: keyboard,
      },
    }

    const message = await bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–¥–µ–ª–∏–µ –∏–∑ –∑–∞–∫–∞–∑–∞:', options)
    userSessions[chatId].awaitingComplaintNewArrange = 2
    userSessions[chatId].messageId = message.message_id
  }

  // –≠–¢–ê–ü 2 –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –∏–∑–¥–µ–ª–∏—è –æ—Ç –î–∏–ª–µ—Ä–∞ ***************************************************************************
  if (userSessions[chatId].awaitingComplaintNewArrange === 2) {
    const orderItems = userSessions[chatId].complaintDetailsAllItem || []

    if (orderItems.includes(msg)) {
      const itemWithIcon = `üîπ ${msg}`
      userSessions[chatId].complaintDetails.push({
        item: itemWithIcon, // –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∏–∑–¥–µ–ª–∏—è
        parts: [], // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –¥–ª—è —á–∞—Å—Ç–µ–π
      })
      /* await bot.sendMessage(
        chatId,
        `–ò–∑–¥–µ–ª–∏–µ "${msg}" –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ø–∏—Å–æ–∫ –∂–∞–ª–æ–±.`
      )*/
      // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
      await bot.deleteMessage(chatId, userSessions[chatId].messageId)
      userSessions[chatId].awaitingComplaintNewArrange = 3
    }
  }

  // –≠–¢–ê–ü 3 - –°—É—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏—è
  if (
    userSessions[chatId].awaitingComplaintNewArrange === 3 &&
    !userSessions[chatId].stageComplaint3
  ) {
    // —Ç—É—Ç –Ω–∞–¥–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–ª–∞–≥, —Ç–∞–∫ –∫–∞–∫ –≤—Å–µ–≥–¥–∞ –¥–∞–∂–µ –ø–æ—Å–ª–µ –≤—ã–±–æ–æ—Ä–∞ –∏–¥–µ—Ç —Å—é–¥–∞
    userSessions[chatId].stageComplaint3 = true
    const partsMenu = [
      { text: '–†–∞–º–∞', callback_data: '–†–∞–º–∞' },
      { text: '–°—Ç–≤–æ—Ä–∫–∞', callback_data: '–°—Ç–≤–æ—Ä–∫–∞' },
      { text: '–ò–º–ø–æ—Å—Ç', callback_data: '–ò–º–ø–æ—Å—Ç' },
      { text: '–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ', callback_data: '–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ' },
      { text: '–§—É—Ä–Ω–∏—Ç—É—Ä–∞', callback_data: '–§—É—Ä–Ω–∏—Ç—É—Ä–∞' },
      { text: '–ö–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ', callback_data: '–ö–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ' }, // –õ–æ–≥–∏–∫–∞ –¥–ª—è –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏—Ö
      { text: '–î–æ—Å—Ç–∞–≤–∫–∞', callback_data: '–î–æ—Å—Ç–∞–≤–∫–∞' },
    ]

    const keyboard = partsMenu.map((reason) => [reason])
    const options = {
      reply_markup: {
        inline_keyboard: keyboard,
      },
    }

    const message = await bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ —Å—É—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏—è:', options)
    userSessions[chatId].messageId = message.message_id
    //   await bot.sendMessage(chatId, `–í—ã–±—Ä–∞–Ω–æ: ${msg}`)

    return
  }
  // –≠–¢–ê–ü 3, –ß–ê–°–¢–¨ 2
  const validParts = [
    '–†–∞–º–∞',
    '–°—Ç–≤–æ—Ä–∫–∞',
    '–ò–º–ø–æ—Å—Ç',
    '–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ',
    '–§—É—Ä–Ω–∏—Ç—É—Ä–∞',
    '–ö–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ',
    '–î–æ—Å—Ç–∞–≤–∫–∞',
  ]
  if (
    userSessions[chatId].stageComplaint3 &&
    userSessions[chatId].awaitingComplaintNewArrange === 3 &&
    validParts.includes(msg)
  ) {
    const currentIndex = userSessions[chatId].complaintDetails.length - 1 // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–Ω–¥–µ–∫—Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∏–∑–¥–µ–ª–∏—è
    const currentComplaint = userSessions[chatId].complaintDetails[currentIndex]
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —á–∞—Å—Ç—å
    const existingPart = currentComplaint.parts.find((part) => part.name === msg)
    if (!existingPart) {
      // –ï—Å–ª–∏ —á–∞—Å—Ç–∏ –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å –ø—É—Å—Ç—ã–º –º–∞—Å—Å–∏–≤–æ–º reasons
      currentComplaint.parts.push({ name: msg, reasons: [] })
      await bot.deleteMessage(chatId, userSessions[chatId].messageId)
      userSessions[chatId].awaitingComplaintNewArrange = 4
      userSessions[chatId].stageComplaint3 = false
      // await bot.sendMessage(chatId, `–ß–∞—Å—Ç—å "${msg}" –¥–æ–±–∞–≤–ª–µ–Ω–∞.  `)
    }
  }

  // –≠–¢–ê–ü 4 - –°—É—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏—è
  if (userSessions[chatId].awaitingComplaintNewArrange === 4) {
    let reasonsMenu = []
    const validReasons = [
      '–ù–µ–¥–æ–≤–æ–∑',
      '–ù–µ–∫–æ–º–ø–ª–µ–∫—Ç',
      '–ë—Ä–∞–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞',
      '–û–ø–æ–∑–¥–∞–Ω–∏–µ',
      '–ü–µ—Ä—Å–æ–Ω–∞–ª',
      '–ë–æ–π/—Å–∫–æ–ª/–ª–æ–ø–∏–Ω–∞',
      '–¶–∞—Ä–∞–ø–∏–Ω—ã/–ø—É–∑—ã—Ä–∏',
      '–†–∞–∑–≥–µ—Ä–º–µ—Ç–∏–∑–∞—Ü–∏—è/–ó–∞–ø–æ—Ç–µ–≤–∞–Ω–∏–µ',
      '–ú—É—Å–æ—Ä/–ì–µ—Ä–º–µ—Ç–∏–∫/–†–∞–∑–≤–æ–¥—ã',
      '–†–∞—Å–∫–ª–∞–¥–∫–∞/–§–∞–ª—å—à',
      '–ù–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º—É–ª–∞',
      '–õ–æ–ø–∏–Ω–∞/—Å–∫–æ–ª',
      '–¶–∞—Ä–∞–ø–∏–Ω–∞',
      '–©–µ–ª—å',
      '–ü–æ–ª–æ–º–∫–∞',
    ]
    if (msg === '–†–∞–º–∞' || msg === '–°—Ç–≤–æ—Ä–∫–∞') {
      reasonsMenu = [
        { text: '–õ–æ–ø–∏–Ω–∞/—Å–∫–æ–ª', callback_data: '–õ–æ–ø–∏–Ω–∞/—Å–∫–æ–ª' },
        { text: '–¶–∞—Ä–∞–ø–∏–Ω–∞', callback_data: '–¶–∞—Ä–∞–ø–∏–Ω–∞' },
      ]
    } else if (msg === '–ò–º–ø–æ—Å—Ç') {
      reasonsMenu = [
        { text: '–õ–æ–ø–∏–Ω–∞/—Å–∫–æ–ª', callback_data: '–õ–æ–ø–∏–Ω–∞/—Å–∫–æ–ª' },
        { text: '–¶–∞—Ä–∞–ø–∏–Ω–∞', callback_data: '–¶–∞—Ä–∞–ø–∏–Ω–∞' },
        { text: '–©–µ–ª—å', callback_data: '–©–µ–ª—å' },
      ]
    } else if (msg === '–§—É—Ä–Ω–∏—Ç—É—Ä–∞') {
      reasonsMenu = [
        { text: '–ù–µ–¥–æ–≤–æ–∑', callback_data: '–ù–µ–¥–æ–≤–æ–∑' },
        { text: '–ù–µ–∫–æ–º–ø–ª–µ–∫—Ç', callback_data: '–ù–µ–∫–æ–º–ø–ª–µ–∫—Ç' },
        { text: '–ü–æ–ª–æ–º–∫–∞', callback_data: '–ü–æ–ª–æ–º–∫–∞' },
      ]
    } else if (msg === '–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ') {
      reasonsMenu = [
        { text: '–ë–æ–π/—Å–∫–æ–ª/–ª–æ–ø–∏–Ω–∞', callback_data: '–ë–æ–π/—Å–∫–æ–ª/–ª–æ–ø–∏–Ω–∞' },
        { text: '–¶–∞—Ä–∞–ø–∏–Ω—ã/–ø—É–∑—ã—Ä–∏', callback_data: '–¶–∞—Ä–∞–ø–∏–Ω—ã/–ø—É–∑—ã—Ä–∏' },
        { text: '–ù–µ–¥–æ–≤–æ–∑', callback_data: '–ù–µ–¥–æ–≤–æ–∑' },
        {
          text: '–†–∞–∑–≥–µ—Ä–º–µ—Ç–∏–∑–∞—Ü–∏—è/–ó–∞–ø–æ—Ç–µ–≤–∞–Ω–∏–µ',
          callback_data: '–†–∞–∑–≥–µ—Ä–º–µ—Ç–∏–∑–∞—Ü–∏—è/–ó–∞–ø–æ—Ç–µ–≤–∞–Ω–∏–µ',
        },
        {
          text: '–ú—É—Å–æ—Ä/–ì–µ—Ä–º–µ—Ç–∏–∫/–†–∞–∑–≤–æ–¥—ã',
          callback_data: '–ú—É—Å–æ—Ä/–ì–µ—Ä–º–µ—Ç–∏–∫/–†–∞–∑–≤–æ–¥—ã',
        },
        { text: '–†–∞—Å–∫–ª–∞–¥–∫–∞/–§–∞–ª—å—à', callback_data: '–†–∞—Å–∫–ª–∞–¥–∫–∞/–§–∞–ª—å—à' },
        {
          text: '–ù–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º—É–ª–∞',
          callback_data: '–ù–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º—É–ª–∞',
        },
      ]
    } else if (msg === '–ö–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ') {
      reasonsMenu = [
        { text: '–ù–µ–¥–æ–≤–æ–∑', callback_data: '–ù–µ–¥–æ–≤–æ–∑' },
        { text: '–ù–µ–∫–æ–º–ø–ª–µ–∫—Ç', callback_data: '–ù–µ–∫–æ–º–ø–ª–µ–∫—Ç' },
        { text: '–ë—Ä–∞–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞', callback_data: '–ë—Ä–∞–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞' },
      ]
    } else if (msg === '–î–æ—Å—Ç–∞–≤–∫–∞') {
      reasonsMenu = [
        { text: '–û–ø–æ–∑–¥–∞–Ω–∏–µ', callback_data: '–û–ø–æ–∑–¥–∞–Ω–∏–µ' },
        { text: '–ü–µ—Ä—Å–æ–Ω–∞–ª', callback_data: '–ü–µ—Ä—Å–æ–Ω–∞–ª' },
      ]
    }

    if (!userSessions[chatId].stageComplaint4) {
      const keyboard = reasonsMenu.map((reason) => [reason])
      const options = {
        reply_markup: {
          inline_keyboard: keyboard,
        },
      }

      const messageReasons = await bot.sendMessage(
        chatId,
        '–í—ã–±–µ—Ä–∏—Ç–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–π –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫:',
        options
      )

      userSessions[chatId].messageId = messageReasons.message_id
      userSessions[chatId].stageComplaint4 = true
    }

    if (validReasons.includes(msg) && userSessions[chatId].stageComplaint4) {
      const lastComplaintDetail =
        userSessions[chatId].complaintDetails[userSessions[chatId].complaintDetails.length - 1]
      if (lastComplaintDetail) {
        const lastPart = lastComplaintDetail.parts[lastComplaintDetail.parts.length - 1]

        if (lastPart) {
          lastPart.reasons.push(msg)
          await bot.deleteMessage(chatId, userSessions[chatId].messageId)
          userSessions[chatId].stageComplaint4 = false
          // await bot.sendMessage(chatId, `–ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ "${msg}" –¥–æ–±–∞–≤–ª–µ–Ω.`)
          userSessions[chatId].awaitingComplaintNewArrange = 5
        }
      }
    }

    console.log(
      '–ß–∞—Å—Ç–∏ –¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:',
      JSON.stringify(userSessions[chatId].complaintDetails, null, 2)
    )
  }

  // –≠–¢–ê–ü 5 - –ü–æ—ç—Ç–∞–ø–Ω–æ–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –æ–±—ä–µ–∫—Ç
  if (userSessions[chatId].awaitingComplaintNewArrange === 5) {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∂–∞–ª–æ–±–∞—Ö
    if (!userSessions[chatId].stageComplaint5) {
      const complaintSummary = formatComplaintDetails(userSessions[chatId].complaintDetails)
      if (userSessions[chatId].lastComplaintSummaryMessageId) {
        try {
          await bot.deleteMessage(chatId, userSessions[chatId].lastComplaintSummaryMessageId)
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error)
        }
      }
      const massageObject = await bot.sendMessage(chatId, complaintSummary)
      userSessions[chatId].lastComplaintSummaryMessageId = massageObject.message_id

      const stageMenu = [
        { text: '‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫', callback_data: 'add_reason' },
        {
          text: '‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –∂–∞–ª–æ–±—ã –∫ –∏–∑–¥–µ–ª–∏—é',
          callback_data: 'add_part',
        },
        { text: '‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∏–∑–¥–µ–ª–∏–µ', callback_data: 'add_item' },
        {
          text: '‚û°Ô∏è –ó–∞–≤–µ—Ä—à–∏—Ç—å –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚û°Ô∏è',
          callback_data: 'complaint_next',
        },
        {
          text: '‚ùå –û—Ç–º–µ–Ω–∞',
          callback_data: '/cancel',
        },
      ]

      const keyboard = stageMenu.map((reason) => [reason])
      const options = {
        reply_markup: {
          inline_keyboard: keyboard,
        },
      }

      const messageStageMenu = await bot.sendMessage(chatId, '–î–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:', options)
      userSessions[chatId].messageStageMenu = messageStageMenu.message_id
      userSessions[chatId].stageComplaint5 = true
    }

    switch (msg) {
      case 'add_reason':
        userSessions[chatId].awaitingComplaintNewArrange = 4
        userSessions[chatId].stageComplaint5 = false
        await bot.deleteMessage(chatId, userSessions[chatId].messageStageMenu)
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ–±—ä–µ–∫—Ç –∏–∑ complaintDetails
        const lastComplaintDetail =
          userSessions[chatId].complaintDetails[userSessions[chatId].complaintDetails.length - 1]
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏ (–µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
        const lastPart = lastComplaintDetail.parts[lastComplaintDetail.parts.length - 1]
        return handleComplaintNewArrange(
          bot,
          chatId,
          lastPart.name, // –∫—Ä–∞–π–Ω—è—è –≤—ã–±—Ä–∞–Ω–Ω–∞—è —á–∞—Å—Ç—å –∏–∑–¥–µ–ª–∏—è
          userSessions,
          companyInn
        )
      case 'add_part':
        userSessions[chatId].awaitingComplaintNewArrange = 3
        userSessions[chatId].stageComplaint5 = false
        await bot.deleteMessage(chatId, userSessions[chatId].messageStageMenu)
        return handleComplaintNewArrange(bot, chatId, msg, userSessions, companyInn)

      case 'add_item':
        userSessions[chatId].awaitingComplaintNewArrange = 1
        userSessions[chatId].getOrderItems1C = true
        userSessions[chatId].stageComplaint5 = false
        await bot.deleteMessage(chatId, userSessions[chatId].messageStageMenu)
        return handleComplaintNewArrange(bot, chatId, msg, userSessions, companyInn)

      case 'complaint_next':
        await bot.deleteMessage(chatId, userSessions[chatId].lastComplaintSummaryMessageId)
        await bot.deleteMessage(chatId, userSessions[chatId].messageStageMenu)
        return handleComplaintReport(bot, chatId, userSessions)

      case '/cancel':
        await bot.deleteMessage(chatId, userSessions[chatId].lastComplaintSummaryMessageId)
        await bot.deleteMessage(chatId, userSessions[chatId].messageStageMenu)
        await handleCancel(bot, chatId, userSessions) // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–º–µ–Ω—ã
        break
    }
  }

  //*** */
  //*** */
  // –ó–∞–ø—Ä–æ—Å –≤ 1–° *** –ø—Ä–∏–Ω–∏–º–∞–µ—Ç
  /* async function getOrderItems1C(msg) {
    if (msg) {
      userSessions[chatId].OrderNo = msg
      return ['–ò–∑–¥–µ–ª–∏–µ-1', '–ò–∑–¥–µ–ª–∏–µ-2', '–ò–∑–¥–µ–ª–∏–µ-3']
    }
  }*/

  function formatComplaintDetails(complaintDetails) {
    let message = '‚úâÔ∏è –í–∞—à–∏ –∂–∞–ª–æ–±—ã:\n\n' // –ù–∞—á–∞–ª–æ —Å–æ–æ–±—â–µ–Ω–∏—è

    complaintDetails.forEach((detail) => {
      message += ` üõ†Ô∏è –ò–∑–¥–µ–ª–∏–µ: *${detail.item}*\n` // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—É—Ä—Å–∏–≤ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –∏–∑–¥–µ–ª–∏—è

      detail.parts.forEach((part) => {
        message += `    –û–±—ä–µ–∫—Ç –∂–∞–ª–æ–±—ã: *${part.name}*\n`
        message += `      –ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫:\n`
        part.reasons.forEach((reason) => {
          message += `      - ${reason}\n` // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥–æ–π –ø—Ä–∏—á–∏–Ω—ã
        })
      })

      message += '\n' // –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –º–µ–∂–¥—É –∏–∑–¥–µ–ª–∏—è–º–∏
    })

    return message // –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  }
}

// **********************************************
// **********************************************
// **********************************************
// ********************************************** –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∞–Ω–Ω—ã—Ö —Ä–µ–∫–ª–∞–º–∞—Ü–∏—è—Ö (complaint_existing) ************************************************************************
async function handleComplaintInfo(bot, chatId, userSessions, companyInn) {
  userSessions[chatId] = userSessions[chatId] || {}

  const sScan = `V6R${companyInn}`
  const response = await sendRequest1C(sScan)

  if (response) {
    await bot.sendMessage(chatId, response)
    await handleCancel(bot, chatId, userSessions)
  } else {
    await bot.sendMessage(chatId, '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.')
    await handleCancel(bot, chatId, userSessions)
  }
}

// **********************************************
// **********************************************
// **********************************************
// ********************************************** –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ –±–µ–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏ (complaint_report_problem) ************************************************************************

// –ù–∞—á–∞–ª–æ, –ø—Ä–æ—Å—å–±–∞ –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏ #1
async function handleComplaintReport(bot, chatId, userSessions) {
  userSessions[chatId] = userSessions[chatId] || {}
  userSessions[chatId].awaitingComplaint = true

  await bot.sendMessage(
    chatId,
    '–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏. –£–∫–∞–∂–∏—Ç–µ —á—Ç–æ –∏–º–µ–Ω–Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ, –∫–∞–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏?'
  )
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏, —Ñ–æ—Ç–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ #2
async function handleAwaitingComplaint(bot, chatId, msg, userSessions) {
  userSessions[chatId] = userSessions[chatId] || {}

  if (!userSessions[chatId].associatedTexts) {
    userSessions[chatId].associatedTexts = []
  }
  if (!userSessions[chatId].fileIds) {
    userSessions[chatId].fileIds = []
  }
  if (!userSessions[chatId].photoIds) {
    userSessions[chatId].photoIds = []
  }

  if (msg.text) {
    if (msg.text.toLowerCase() === '–≥–æ—Ç–æ–≤–æ') {
      await finalizeCalculation(chatId, userSessions, bot)
      return
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    if (userSessions[chatId].lastTextMessageId) {
      try {
        await bot.deleteMessage(chatId, userSessions[chatId].lastTextMessageId)
      } catch (error) {
        console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç–µ: ${error.message}`)
      }
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    userSessions[chatId].associatedTexts.push(msg.text)
    const message = await bot.sendMessage(
      chatId,
      '–¢–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –ï—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–π —Å–µ—Å—Å–∏–∏, –ª–∏–±–æ –∑–∞–∫–æ–Ω—á–∏—Ç–µ —Å–µ—Å—Å–∏—é, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É - "–ì–û–¢–û–í–û".',
      {
        reply_markup: {
          inline_keyboard: [
            [
              { text: '–ì–û–¢–û–í–û', callback_data: 'finish_complaint_report' }, // –ö–Ω–æ–ø–∫–∞ "–ì–û–¢–û–í–û"
            ],
            [{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: '/cancel' }],
          ],
        },
      }
    )

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ
    userSessions[chatId].lastTextMessageId = message.message_id
    return
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
  if (msg.document) {
    if (msg.caption) {
      const captionText = `–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É: [${msg.caption}]`
      userSessions[chatId].associatedTexts.push(captionText)
    }

    userSessions[chatId].fileIds.push(msg.document.file_id)
    // –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    if (userSessions[chatId].lastDocumentMessageId) {
      try {
        await bot.deleteMessage(chatId, userSessions[chatId].lastDocumentMessageId)
      } catch (error) {
        console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ: ${error.message}`)
      }
    }

    const message = await bot.sendMessage(
      chatId,
      '–î–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω! –ï—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–π —Å–µ—Å—Å–∏–∏, –ª–∏–±–æ –∑–∞–∫–æ–Ω—á–∏—Ç–µ —Å–µ—Å—Å–∏—é, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É - "–ì–û–¢–û–í–û".',
      {
        reply_markup: {
          inline_keyboard: [
            [
              { text: '–ì–û–¢–û–í–û', callback_data: 'finish_complaint_report' }, // –ö–Ω–æ–ø–∫–∞ "–ì–û–¢–û–í–û"
            ],
          ],
        },
      }
    )

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ
    userSessions[chatId].lastDocumentMessageId = message.message_id
    return
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
  if (msg.photo) {
    if (msg.caption) {
      const captionText = `–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é: [${msg.caption}]`
      userSessions[chatId].associatedTexts.push(captionText)
    }
    let maxPhoto = msg.photo.reduce((prev, current) =>
      prev.height > current.height ? prev : current
    )
    userSessions[chatId].photoIds.push(maxPhoto.file_id)
    // –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    if (userSessions[chatId].lastPhotoMessageId) {
      try {
        await bot.deleteMessage(chatId, userSessions[chatId].lastPhotoMessageId)
      } catch (error) {
        console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ñ–æ—Ç–æ: ${error.message}`)
      }
    }

    const message = await bot.sendMessage(
      chatId,
      '–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ! –ï—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–π —Å–µ—Å—Å–∏–∏, –ª–∏–±–æ –∑–∞–∫–æ–Ω—á–∏—Ç–µ —Å–µ—Å—Å–∏—é, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É - "–ì–û–¢–û–í–û".',
      {
        reply_markup: {
          inline_keyboard: [
            [
              { text: '–ì–û–¢–û–í–û', callback_data: 'finish_complaint_report' }, // –ö–Ω–æ–ø–∫–∞ "–ì–û–¢–û–í–û"
            ],
            [{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: '/cancel' }],
          ],
        },
      }
    )

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º —Ñ–æ—Ç–æ
    userSessions[chatId].lastPhotoMessageId = message.message_id
    return
  }

  // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç
  await bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç, –¥–æ–∫—É–º–µ–Ω—Ç –∏–ª–∏ —Ñ–æ—Ç–æ.')
}

// #3
async function handleComplaintReportProblem(chatId, userSessions, bot) {
  const sessionData = userSessions[chatId]
  let userId
  // –ü–æ–ª—É—á–∞–µ–º userId, –∏—Å–ø–æ–ª—å–∑—É—è –≤—ã–Ω–µ—Å–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
  if (userSessions[chatId]?.awaitingComplaintNewArrange === 5) {
    const complaintDetails = userSessions[chatId].complaintDetails
    const OrderNo = userSessions[chatId].OrderNo
    userId = await getMppByCompany(sessionData.companyId)
    isRegistration = ''

    const formattedComplaintDetails = complaintDetails
      .map(({ item, parts }) => {
        const partsDetails = parts
          .map((part) => {
            const reasonsList = part.reasons.join(', ')
            return `  - ${part.name}: ${reasonsList}`
          })
          .join('\n')

        return `${item}:\n${partsDetails}`
      })
      .join('\n')

    textCalc =
      sessionData.associatedTexts.join('\n') +
      '\n' +
      '–ó–∞–∫–∞–∑ ‚Ññ ' +
      OrderNo +
      '\n' +
      formattedComplaintDetails
  } else {
    userId = await getNokOrMppByCompany(sessionData.companyId)
    textCalc = sessionData.associatedTexts.join('\n') // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç —Ä–∞—Å—á–µ—Ç–∞
    isRegistration = '–±–µ–∑ –µ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è'
  }

  const fileLinks = await Promise.all(
    sessionData.fileIds.map(async (fileId) => {
      const fileLink = await bot.getFile(fileId)
      return `https://api.telegram.org/file/bot${process.env.TELEGRAM_BOT_TOKEN}/${fileLink.file_path}`
    })
  )

  const photoLinks = await Promise.all(
    sessionData.photoIds.map(async (photoId) => {
      const fileLink = await bot.getFile(photoId)
      return `https://api.telegram.org/file/bot${process.env.TELEGRAM_BOT_TOKEN}/${fileLink.file_path}`
    })
  )

  const allLinks = [...fileLinks, ...photoLinks]
  tags = [
    { title: 'üî¥–°–†–û–ß–ù–û', ...getRandomColors() },
    { title: 'Telegram', ...getRandomColors() },
  ]

  try {
    //  –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ù–û–ö
    await createReminder({
      newRecordId: -1,
      userId,
      textCalc: textCalc,
      typeReminders: 'complaint_report_problem',
      priority: '–≤—ã—Å–æ–∫–∏–π',
      title: `–°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏ ${isRegistration} *${
        userSessions[chatId].companyName
      }*. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å tg: (id:${chatId}) ${sessionData.userName ? sessionData.userName : ''}`,
      tags: tags,
      links: allLinks,
    })

    await bot.sendMessage(chatId, '‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ!')
    await bot.sendMessage(chatId, textCalc)
    handleCancel(bot, chatId, userSessions)
  } catch (error) {
    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ —Å–Ω–æ–≤–∞!')
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏: ${error.message}`)
    if (error.response) {
      console.error(`–î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞: ${JSON.stringify(error.response.data)}`)
    }
    await bot.sendMessage(
      chatId,
      '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
    )
  }
}

// ********************************************** ||| ************************************************************************

module.exports = {
  handleComplaint,
  handleComplaintReportProblem,
  handleComplaintReport,
  handleAwaitingComplaint,
  handleComplaintInfo,
  handleComplaintNewArrange,
}
