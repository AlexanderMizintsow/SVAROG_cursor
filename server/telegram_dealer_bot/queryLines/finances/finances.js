const {
  createReminder,
  getMppByCompany,
  sendRequest1C,
  getCompanyDataEGRUL,
} = require('../../helpers/api')
const { keyboardCancel, deleteLastMessage } = require('../../helpers/utils.js')
const { getRandomColors } = require('../../helpers/getRandomColors')
const { handleCancel } = require('../../helpers/buttonCancel')

async function handleFinances(bot, chatId, userSessions, companyInn) {
  userSessions[chatId] = userSessions[chatId] || {}
  // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ä–∞—Å—á–µ—Ç–∞
  await deleteLastMessage(bot, chatId, userSessions)

  const message = await bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', {
    reply_markup: {
      inline_keyboard: [
        [
          {
            text: 'üßæ –ó–∞–∫–∞–∑–∞—Ç—å –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫—É—é —Å–≤–µ—Ä–∫—É',
            callback_data: '/accounting_reconciliation',
          },
        ],
        [
          {
            text: 'üìàüîç –£–∑–Ω–∞—Ç—å –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á–µ—Ç–µ',
            callback_data: '/finances_remainder',
          },
        ],
        ...(companyInn
          ? [[{ text: 'üìù‚è≥ –í—ã—Å—Ç–∞–≤–∏—Ç—å —Å—á–µ—Ç', callback_data: '/issue_invoice' }]]
          : []),
        /*   [
          {
            text: 'üìÑüìß –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É',
            callback_data: '/add_holding',
          },
        ],*/
        [{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: '/cancel' }],
      ],
    },
  })

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ä–∞—Å—á–µ—Ç–∞—Ö
  userSessions[chatId] = userSessions[chatId] || {}
  userSessions[chatId].lastMessageId = message.message_id

  return message
}

// **********************************************
// **********************************************
// **********************************************
// ********************************************** –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É (handleAddHolding) ************************************************************************
async function handleAddHolding(bot, chatId, msg, userSessions, companyInn) {
  userSessions[chatId] = userSessions[chatId] || {}
  userSessions[chatId].egrul || {}

  // –≠—Ç–∞–ø 0
  if (!userSessions[chatId].addHolding) {
    await bot.deleteMessage(chatId, userSessions[chatId].lastMessageId)
    userSessions[chatId].addHolding = 1
    const buttons = [[{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: '/cancel' }]]
    const options = {
      reply_markup: {
        inline_keyboard: buttons,
      },
    }

    const message = await bot.sendMessage(
      chatId,
      '–í–≤–µ–¥–∏—Ç–µ –ò–ù–ù –¥–æ–±–∞–≤–ª—è–µ–º–æ–≥–æ —Ö–æ–ª–¥–∏–Ω–≥–∞',
      options
    )

    userSessions[chatId].lastMessageId = message.message_id
    return
  }

  // –≠—Ç–∞–ø 1 –ó–∞–ø—Ä–æ—Å –ø–æ API, –∑–∞–ø—Ä–æ—Å –ö–ü–ü
  if (userSessions[chatId].addHolding === 1) {
    await bot.deleteMessage(chatId, userSessions[chatId]?.lastMessageId)
    //732104669694
    try {
      await getCompanyDataEGRUL(msg.text).then((data) => {
        userSessions[chatId].egrul = data
        console.log(userSessions[chatId].egrul.kpp)
      })
    } catch {
      await bot.sendMessage(chatId, '–í–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –ò–ù–ù')
      handleCancel(bot, chatId, userSessions)
    }

    if (userSessions[chatId].egrul.kpp === '–ù–µ —É–∫–∞–∑–∞–Ω–æ') {
      await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –ö–ü–ü –¥–æ–±–∞–≤–ª—è–µ–º–æ–≥–æ —Ö–æ–ª–¥–∏–Ω–≥–∞')
    }
    userSessions[chatId].addHolding = 2
    return
  }

  // –≠—Ç–∞–ø 2 –∑–∞–ø—Ä–æ—Å —Ä–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç(–±–∞–Ω–∫)
  if (userSessions[chatId].addHolding === 2) {
    userSessions[chatId].addHolding = 3
    userSessions[chatId].egrul.kpp = msg.text
    await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç(–±–∞–Ω–∫)')
    return
  }

  // –≠—Ç–∞–ø 3 –∑–∞–ø—Ä–æ—Å –ë–ò–ö
  if (userSessions[chatId].addHolding === 3) {
    userSessions[chatId].addHolding = 4
    userSessions[chatId].egrul.payment = msg.text
    await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –ë–ò–ö')
    return
  }

  // –≠—Ç–∞–ø 4 –∑–∞–ø—Ä–æ—Å –ö/—Å
  if (userSessions[chatId].addHolding === 4) {
    userSessions[chatId].addHolding = 5
    userSessions[chatId].egrul.bic = msg.text
    await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –ö/—Å')
    return
  }

  // –≠—Ç–∞–ø 5 –∑–∞–ø—Ä–æ—Å –ì–ª–∞–≤–Ω—ã–π –±—É—Ö–≥–∞–ª—Ç–µ—Ä
  if (userSessions[chatId].addHolding === 5) {
    userSessions[chatId].addHolding = 6
    userSessions[chatId].egrul.kc = msg.text
    await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –§–ò–û –≥–ª–∞–≤–Ω–æ–≥–æ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞')
    return
  }

  // –≠—Ç–∞–ø 6 –∑–∞–ø—Ä–æ—Å –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤ –∑–∞ –≤–µ—Å—å –ø–µ—Ä–∏–æ–¥
  if (userSessions[chatId].addHolding === 6) {
    userSessions[chatId].addHolding = 7
    userSessions[chatId].egrul.fullNameAccountant = msg.text
    await bot.sendMessage(
      chatId,
      '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤ –∑–∞ –≤–µ—Å—å –ø–µ—Ä–∏–æ–¥'
    )
    return
  }

  // –≠—Ç–∞–ø 7 –∑–∞–ø—Ä–æ—Å –¶–µ–ª—å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è –æ–∫–æ–Ω
  if (userSessions[chatId].addHolding === 7) {
    userSessions[chatId].addHolding = 20
    userSessions[chatId].egrul.countDirectors = msg.text
    const buttons = [
      [
        { text: '–ü–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∞', callback_data: '–ü–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∞' },
        { text: '–õ–∏—á–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ', callback_data: '–õ–∏—á–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ' },
      ],
      [{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: '/cancel' }],
    ]
    const options = {
      reply_markup: {
        inline_keyboard: buttons,
      },
    }
    await bot.sendMessage(chatId, '–¶–µ–ª—å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è –æ–∫–æ–Ω?', options)
    return
  }

  // –≠—Ç–∞–ø 20 –∑–∞–ø—Ä–æ—Å –≠–î–û
  if (userSessions[chatId].addHolding === 20) {
    console.log(msg)
    if (msg === '–°–±–∏—Å' || msg === '–ö–æ–Ω—Ç—É—Ä –î–∏–∞–¥–æ–∫') {
      // –ì–û–°–¢ (–≥–æ–¥) –∏–ª–∏ –¢–£
      userSessions[chatId].egrul.edo = msg
      await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –ì–û–°–¢ (–≥–æ–¥) –∏–ª–∏ –¢–£')
      userSessions[chatId].addHolding = 9
      return
    }
    if (msg === '–î—Ä—É–≥–æ–µ') {
      await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ')

      userSessions[chatId].addHolding = 8
      return
    }

    userSessions[chatId].egrul.goal = msg
    const buttons = [
      [
        { text: '–°–±–∏—Å', callback_data: '–°–±–∏—Å' },
        { text: '–ö–æ–Ω—Ç—É—Ä –î–∏–∞–¥–æ–∫', callback_data: '–ö–æ–Ω—Ç—É—Ä –î–∏–∞–¥–æ–∫' },
        { text: '–î—Ä—É–≥–æ–µ', callback_data: '–î—Ä—É–≥–æ–µ' },
      ],
      [{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: '/cancel' }],
    ]
    const options = {
      reply_markup: {
        inline_keyboard: buttons,
      },
    }
    await bot.sendMessage(chatId, '–≠–î–û', options)
    return
  }

  // –≠—Ç–∞–ø 8 –∑–∞–ø—Ä–æ—Å –ì–û–°–¢ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ - –î—Ä—É–≥–æ–µ
  if (userSessions[chatId].addHolding === 8) {
    userSessions[chatId].egrul.edo = msg.text
    userSessions[chatId].addHolding = 9
    await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –ì–û–°–¢ (–≥–æ–¥) –∏–ª–∏ –¢–£')
    return
  }

  // –≠—Ç–∞–ø 9 –∑–∞–ø—Ä–æ—Å –ì–û–°–¢ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ - –°–±–∏—Å –ö–æ–Ω—Ç—É—Ä
  if (userSessions[chatId].addHolding === 9) {
    userSessions[chatId].addHolding = 21
    userSessions[chatId].egrul.gost = msg.text
    const buttons = [
      [
        { text: '–î–∞', callback_data: '–î–∞' },
        { text: '–ù–µ—Ç', callback_data: '–ù–µ—Ç' },
      ],
      [{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: '/cancel' }],
    ]
    const options = {
      reply_markup: {
        inline_keyboard: buttons,
      },
    }
    await bot.sendMessage(chatId, '–ù—É–∂–µ–Ω –ª–∏ –ø–∞—Å–ø–æ—Ä—Ç –∫–∞—á–µ—Å—Ç–≤–∞?', options)
    return
  }

  // –≠—Ç–∞–ø 21 –ù–∞–ª–∏—á–∏–µ –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
  if (userSessions[chatId].addHolding === 21) {
    userSessions[chatId].addHolding = 22
    userSessions[chatId].egrul.passport = msg
    const buttons = [
      [
        { text: '–î–∞', callback_data: '–î–∞' },
        { text: '–ù–µ—Ç', callback_data: '–ù–µ—Ç' },
      ],
      [{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: '/cancel' }],
    ]
    const options = {
      reply_markup: {
        inline_keyboard: buttons,
      },
    }
    await bot.sendMessage(
      chatId,
      '–ù–∞–ª–∏—á–∏–µ –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –¥–∏–ª–µ—Ä–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤?',
      options
    )
    return
  }

  // –≠—Ç–∞–ø 22 –°–ø–æ—Å–æ–± –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è
  if (userSessions[chatId].addHolding === 22) {
    userSessions[chatId].addHolding = 23
    userSessions[chatId].egrul.attorney = msg
    const buttons = [
      [
        { text: '–ü–æ—á—Ç–∞ –†–§', callback_data: '–ü–æ—á—Ç–∞ –†–§' },
        { text: '–≠–î–û', callback_data: '–≠–î–û' },
        { text: '–ü—Ä–∏ –¥–æ—Å—Ç–∞–≤–∫–µ', callback_data: '–ü—Ä–∏ –¥–æ—Å—Ç–∞–≤–∫–µ' },
      ],
      [{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: '/cancel' }],
    ]
    const options = {
      reply_markup: {
        inline_keyboard: buttons,
      },
    }
    await bot.sendMessage(chatId, '–°–ø–æ—Å–æ–± –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è?', options)
    return
  }

  // –≠—Ç–∞–ø 23 –î–∞—Ç–∞ –æ—Ç–≥—Ä—É–∑–∫–∏
  if (userSessions[chatId].addHolding === 23) {
    userSessions[chatId].addHolding = 10
    userSessions[chatId].egrul.signingMethod = msg

    await bot.sendMessage(chatId, '–î–∞—Ç–∞ –æ—Ç–≥—Ä—É–∑–∫–∏?')
    return
  }

  // –≠—Ç–∞–ø 24 –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ —Ö–æ–ª–¥–∏–Ω–≥–∞
  if (userSessions[chatId].addHolding === 10) {
    userSessions[chatId].addHolding = 11
    userSessions[chatId].egrul.dateShipment = msg.text

    await bot.sendMessage(
      chatId,
      '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ —Ö–æ–ª–¥–∏–Ω–≥–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤? (–ø–æ—Ç—á–∞, —Ç–µ–ª–µ—Ñ–æ–Ω)'
    )
    return
  }

  // –≠—Ç–∞–ø 25 –°—É–º–º–∞ –¥–æ–≥–æ–≤–æ—Ä–∞
  if (userSessions[chatId].addHolding === 11) {
    userSessions[chatId].addHolding = 12
    userSessions[chatId].egrul.contactPerson = msg.text

    await bot.sendMessage(chatId, '–°—É–º–º–∞ –¥–æ–≥–æ–≤–æ—Ä–∞')
    return
  }

  // –≠—Ç–∞–ø 26 –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞/—Ä–∞—Å—á–µ—Ç–∞
  if (userSessions[chatId].addHolding === 12) {
    userSessions[chatId].addHolding = 13
    userSessions[chatId].egrul.amountAgreement = msg.text

    await bot.sendMessage(chatId, '–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞/—Ä–∞—Å—á–µ—Ç–∞')
    return
  }

  // –≠—Ç–∞–ø 26 –î–æ–≥–æ–≤–æ—Ä –¥–∏–ª–µ—Ä—Å–∫–∏–π/–î–æ–≥–æ–≤–æ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏
  if (userSessions[chatId].addHolding === 13) {
    userSessions[chatId].addHolding = 24
    userSessions[chatId].egrul.orderCalculation = msg.text
    const buttons = [
      [
        { text: '–î–æ–≥–æ–≤–æ—Ä –¥–∏–ª–µ—Ä—Å–∫–∏–π', callback_data: '–î–æ–≥–æ–≤–æ—Ä –¥–∏–ª–µ—Ä—Å–∫–∏–π' },
        { text: '–î–æ–≥–æ–≤–æ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏', callback_data: '–î–æ–≥–æ–≤–æ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏' },
      ],
      [{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: '/cancel' }],
    ]
    const options = {
      reply_markup: {
        inline_keyboard: buttons,
      },
    }
    await bot.sendMessage(chatId, '–î–æ–≥–æ–≤–æ—Ä –¥–∏–ª–µ—Ä—Å–∫–∏–π/–î–æ–≥–æ–≤–æ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏', options)
    return
  }

  // –≠—Ç–∞–ø 27
  if (userSessions[chatId].addHolding === 24) {
    userSessions[chatId].addHolding = 14
    userSessions[chatId].egrul.contractType = msg

    await bot.sendMessage(chatId, '–û—Å–æ–±—ã–µ —É—Å–ª–æ–≤–∏—è –æ—Ç–≥—Ä—É–∑–∫–∏')
    return
  }

  // –≠—Ç–∞–ø 28
  if (userSessions[chatId].addHolding === 14) {
    userSessions[chatId].addHolding = 15
    userSessions[chatId].egrul.termsShipment = msg.text

    await bot.sendMessage(chatId, '–æ—Å–æ–±—ã–µ —É—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã')
    return
  }

  // –≠—Ç–∞–ø 29
  if (userSessions[chatId].addHolding === 15) {
    userSessions[chatId].addHolding = 16
    userSessions[chatId].egrul.termsPayment = msg.text

    await bot.sendMessage(chatId, '–æ—Å–æ–±—ã–µ —É—Å–ª–æ–≤–∏—è –∑–∞–∫–∞–∑–∞')
    return
  }

  // –≠—Ç–∞–ø 30
  if (userSessions[chatId].addHolding === 16) {
    userSessions[chatId].addHolding = 17
    userSessions[chatId].egrul.termsOrder = msg.text

    await bot.sendMessage(chatId, '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π')
    return
  }

  // –≠—Ç–∞–ø FINAL
  if (userSessions[chatId].addHolding === 17) {
    userSessions[chatId].egrul.comment = msg.text

    // await bot.deleteMessage(chatId, userSessions[chatId]?.lastMessageId)
    const sessionData = userSessions[chatId]
    //  console.log(userSessions[chatId].egrul)
    const egrulData = userSessions[chatId].egrul

    const textCalc = `–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–æ–ª–¥–∏–Ω–≥–∞:
- **–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å:** ${egrulData.legalAddress}
- **–ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å:** ${egrulData.fullAddress}
- **–ò–ù–ù:** ${egrulData.inn}
- **–ö–ü–ü:** ${egrulData.kpp}
- **–û–ì–†–ù:** ${egrulData.ogrn}
- **–ö—Ä–∞—Ç–∫–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ:** ${egrulData.shortName}
- **–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:** ${egrulData.registrationDate}
- **–†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç:** ${egrulData.payment}
- **–ë–ò–ö:** ${egrulData.bic}
- **–ö–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—Å–∫–∏–π —Å—á–µ—Ç:** ${egrulData.kc}
- **–§–ò–û –≥–ª–∞–≤–Ω–æ–≥–æ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞:** ${egrulData.fullNameAccountant}
- **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤:** ${egrulData.countDirectors}
- **–¶–µ–ª—å –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–µ–º—ã—Ö –æ–∫–æ–Ω:** ${egrulData.goal}
- **–≠–î–û:** ${egrulData.edo}
- **–ì–û–°–¢ (–≥–æ–¥) –∏–ª–∏ –¢–£:** ${egrulData.gost}
- **–ù—É–∂–µ–Ω –ª–∏ –ø–∞—Å–ø–æ—Ä—Ç –∫–∞—á–µ—Å—Ç–≤–∞:** ${egrulData.passport}
- **–ù–∞–ª–∏—á–∏–µ –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏:** ${egrulData.attorney}
- **–°–ø–æ—Å–æ–± –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è:** ${egrulData.signingMethod}
- **–î–∞—Ç–∞ –æ—Ç–≥—Ä—É–∑–∫–∏:** ${egrulData.dateShipment}
- **–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ –¥–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:** ${egrulData.contactPerson}
- **–°—É–º–º–∞ –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É:** ${egrulData.amountAgreement}
- **–ù–æ–º–µ—Ä —Ä–∞—Å—á–µ—Ç–∞:** ${egrulData.orderCalculation}
- **–¢–∏–ø –¥–æ–≥–æ–≤–æ—Ä–∞:** ${egrulData.contractType}
- **–£—Å–ª–æ–≤–∏—è –æ—Ç–≥—Ä—É–∑–∫–∏:** ${egrulData.termsShipment}
- **–£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã:** ${egrulData.termsPayment}
- **–£—Å–ª–æ–≤–∏—è –∑–∞–∫–∞–∑–∞:** ${egrulData.termsOrder}
- **–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:** ${egrulData.comment}
`
    userId = await getMppByCompany(sessionData.companyId)

    try {
      //  –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ú–ü–ü
      await createReminder({
        newRecordId: -1,
        userId,
        textCalc: textCalc,
        typeReminders: 'finances',
        priority: '–≤—ã—Å–æ–∫–∏–π',
        title: `–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–æ–ª–¥–∏–Ω–≥–∞ –¥–ª—è *${
          userSessions[chatId].companyName
        }*. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å tg: (id:${chatId}) ${
          sessionData.userName ? sessionData.userName : ''
        }`,
        tags: [
          { title: 'üî¥–°–†–û–ß–ù–û', ...getRandomColors() },
          { title: 'Telegram', ...getRandomColors() },
        ],
        links: [],
      })

      await bot.sendMessage(
        chatId,
        '‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ!'
      )
      handleCancel(bot, chatId, userSessions)
    } catch (error) {
      await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ —Å–Ω–æ–≤–∞!')
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏: ${error.message}`)
      if (error.response) {
        console.error(`–î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞: ${JSON.stringify(error.response.data)}`)
      }
      await bot.sendMessage(
        chatId,
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
      )
    }
    return
  }
}

// **********************************************
// **********************************************
// **********************************************
// ********************************************** –í—ã—Å—Ç–∞–≤–∏—Ç—å —Å—á–µ—Ç (handleIssueInvoice) ************************************************************************
async function handleIssueInvoice(
  bot,
  chatId,
  msg,
  userSessions,
  companyInn,
  companyName
) {
  userSessions[chatId] = userSessions[chatId] || {}

  // –≠—Ç–∞–ø 0
  if (!userSessions[chatId].awaitingIssueInvoice) {
    await bot.deleteMessage(chatId, userSessions[chatId].lastMessageId)
    userSessions[chatId].awaitingIssueInvoice = 1
    const sScan = `V7R${companyInn}`
    const response = await sendRequest1C(sScan)
    userSessions[chatId].counterparty = response

    // –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∏–∑ companyName
    const companyNameObject = {
      name: companyName,
      address: '',
      full: companyName,
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞ counterparty
    userSessions[chatId].counterparty.unshift(companyNameObject)

    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤
    const buttons = userSessions[chatId].counterparty.map((counterparty) => {
      const shortName =
        counterparty.name.length > 15
          ? counterparty.name.substring(0, 15)
          : counterparty.name
      return [{ text: counterparty.name, callback_data: shortName }]
    })

    buttons.push([
      { text: '‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ö–æ–ª–¥–∏–Ω–≥', callback_data: '/add_holding' },
      { text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: '/cancel' },
    ])

    const options = {
      reply_markup: {
        inline_keyboard: buttons,
      },
    }

    const message = await bot.sendMessage(
      chatId,
      '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞',
      options
    )
    userSessions[chatId].lastMessageId = message.message_id
    return
  }

  // –≠—Ç–∞–ø 1
  if (userSessions[chatId].awaitingIssueInvoice === 1) {
    userSessions[chatId].awaitingIssueInvoice = 2
    userSessions[chatId].counterpartyResponse = msg
    await bot.deleteMessage(chatId, userSessions[chatId].lastMessageId)

    const options = {
      reply_markup: {
        inline_keyboard: [[{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: '/cancel' }]],
      },
    }

    const message = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É', options)
    userSessions[chatId].lastMessageId = message.message_id
    return
  }

  // –≠—Ç–∞–ø 2
  if (userSessions[chatId].awaitingIssueInvoice === 2) {
    bot.sendMessage(chatId, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏')

    const sessionData = userSessions[chatId]
    userId = await getMppByCompany(sessionData.companyId)

    // –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞ —Å —É—á–µ—Ç–æ–º –ø–µ—Ä–≤—ã—Ö 15 —Å–∏–º–≤–æ–ª–æ–≤
    const filteredCounterparty = userSessions[chatId].counterparty.find(
      (counterparty) => {
        const shortName =
          counterparty.name.length > 15
            ? counterparty.name.substring(0, 15)
            : counterparty.name
        return (
          shortName ===
          userSessions[chatId].counterpartyResponse.substring(0, 15)
        ) // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –æ–±—Ä–µ–∑–∞–Ω–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
      }
    )

    try {
      //  –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ú–ü–ü
      await createReminder({
        newRecordId: -1,
        userId,
        textCalc: `–í—ã—Å—Ç–∞–≤–∏—Ç—å —Å—á–µ—Ç –Ω–∞ —Å—É–º–º—É: ${msg.text}—Ä., –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç: ${filteredCounterparty.full}`,
        typeReminders: 'finances',
        priority: '–≤—ã—Å–æ–∫–∏–π',
        title: `–í—ã—Å—Ç–∞–≤–∏—Ç—å —Å—á–µ—Ç *${
          userSessions[chatId].companyName
        }*. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å tg: (id:${chatId}) ${
          sessionData.userName ? sessionData.userName : ''
        }`,
        tags: [
          { title: 'üî¥–°–†–û–ß–ù–û', ...getRandomColors() },
          { title: 'Telegram', ...getRandomColors() },
        ],
        links: [],
      })

      await bot.sendMessage(
        chatId,
        '‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ!'
      )
      handleCancel(bot, chatId, userSessions)
    } catch (error) {
      await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ —Å–Ω–æ–≤–∞!')
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏: ${error.message}`)
      if (error.response) {
        console.error(`–î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞: ${JSON.stringify(error.response.data)}`)
      }
      await bot.sendMessage(
        chatId,
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
      )
    }
  }
}

// **********************************************
// **********************************************
// **********************************************
// ********************************************** –ó–∞–∫–∞–∑–∞—Ç—å –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫—É—é —Å–≤–µ—Ä–∫—É (handleFinancesAccountingReconciliation) ************************************************************************
async function handleFinancesAccountingReconciliation(
  bot,
  chatId,
  msg,
  userSessions
) {
  userSessions[chatId] = userSessions[chatId] || {}
  console.log(0)
  // –≠—Ç–∞–ø 0
  if (!userSessions[chatId].awaitingFinancesAccountingReconciliation) {
    userSessions[chatId].awaitingFinancesAccountingReconciliation = 1
    await bot.sendMessage(chatId, '–£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', keyboardCancel)

    return
  }

  // –≠—Ç–∞–ø 1
  if (userSessions[chatId].awaitingFinancesAccountingReconciliation === 1) {
    const sessionData = userSessions[chatId]
    userId = await getMppByCompany(sessionData.companyId)

    try {
      //  –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ú–ü–ü
      await createReminder({
        newRecordId: -1,
        userId,
        textCalc: `–ó–∞–ø—Ä–æ—Å –Ω–∞ –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫—É—é —Å–≤–µ—Ä–∫—É, –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç: ${msg.text}`,
        typeReminders: 'finances',
        priority: '–≤—ã—Å–æ–∫–∏–π',
        title: `–ó–∞–∫–∞–∑–∞—Ç—å –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫—É—é —Å–≤–µ—Ä–∫—É *${
          userSessions[chatId].companyName
        }*. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å tg: (id:${chatId}) ${
          sessionData.userName ? sessionData.userName : ''
        }`,
        tags: [
          { title: 'üî¥–°–†–û–ß–ù–û', ...getRandomColors() },
          { title: 'Telegram', ...getRandomColors() },
        ],
        links: [],
      })

      await bot.sendMessage(
        chatId,
        '‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ!'
      )
      handleCancel(bot, chatId, userSessions)
    } catch (error) {
      await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ —Å–Ω–æ–≤–∞!')
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏: ${error.message}`)
      if (error.response) {
        console.error(`–î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞: ${JSON.stringify(error.response.data)}`)
      }
      await bot.sendMessage(
        chatId,
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
      )
    }
  }
}

// **********************************************
// **********************************************
// **********************************************
// ********************************************** –£–∑–Ω–∞—Ç—å –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á–µ—Ç–µ (handleFinancesRemainder) ************************************************************************
async function handleFinancesRemainder(bot, chatId, userSessions, companyInn) {
  const sessionData = userSessions[chatId]
  const userId = await getMppByCompany(sessionData.companyId)

  try {
    //  –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ú–ü–ü
    await createReminder({
      newRecordId: -1,
      userId,
      textCalc: `–î–∏–ª–µ—Ä –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Å—Ç–∞—Ç–∫–µ –Ω–∞ —Å—á–µ—Ç–µ. –ò–ù–ù: ${companyInn}`,
      typeReminders: 'finances',
      priority: '–≤—ã—Å–æ–∫–∏–π',
      title: `–£–∑–Ω–∞—Ç—å –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á–µ—Ç–µ *${
        userSessions[chatId].companyName
      }*. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å tg: (id:${chatId}) ${
        sessionData.userName ? sessionData.userName : ''
      }`,
      tags: [
        { title: 'üî¥–°–†–û–ß–ù–û', ...getRandomColors() },
        { title: 'Telegram', ...getRandomColors() },
      ],
      links: [],
    })

    await bot.sendMessage(
      chatId,
      '‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ!'
    )
    handleCancel(bot, chatId, userSessions)
  } catch (error) {
    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ —Å–Ω–æ–≤–∞!')
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏: ${error.message}`)
    if (error.response) {
      console.error(`–î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞: ${JSON.stringify(error.response.data)}`)
    }
    await bot.sendMessage(
      chatId,
      '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
    )
    return
  }
}

module.exports = {
  handleFinances,
  handleFinancesAccountingReconciliation,
  handleFinancesRemainder,
  handleIssueInvoice,
  handleAddHolding,
}
