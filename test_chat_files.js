// –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ chat-files
const axios = require('axios')

const API_BASE_URL = 'http://localhost:5000'

async function testChatFilesEndpoints() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã chat-files...')

    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–¥–∞—á–∏ 219
    console.log('\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º GET /api/chat-files/219')
    try {
      const response = await axios.get(`${API_BASE_URL}/api/chat-files/219`)
      console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ:', response.status, response.data)
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞:', error.response?.status, error.response?.data || error.message)
    }

    // –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º POST /api/chat-files/add')
    try {
      const testFile = {
        message_id: 892,
        task_id: 219,
        original_name: 'test-image.jpg',
        server_filename: 'test-server-name.jpg',
        file_path: '/uploads/test-image.jpg',
        file_size: 1024,
        file_type: 'image/jpeg',
        is_image: true,
        sender_id: 7,
        sender_name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      }

      const response = await axios.post(`${API_BASE_URL}/api/chat-files/add`, testFile)
      console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω —Ñ–∞–π–ª:', response.status, response.data)
    } catch (error) {
      console.log(
        '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏:',
        error.response?.status,
        error.response?.data || error.message
      )
    }

    // –¢–µ—Å—Ç 3: –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    console.log('\n3Ô∏è‚É£ –ü–æ–≤—Ç–æ—Ä–Ω–æ —Ç–µ—Å—Ç–∏—Ä—É–µ–º GET /api/chat-files/219')
    try {
      const response = await axios.get(`${API_BASE_URL}/api/chat-files/219`)
      console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ:', response.status, response.data)
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞:', error.response?.status, error.response?.data || error.message)
    }
  } catch (error) {
    console.error('üí• –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testChatFilesEndpoints()
