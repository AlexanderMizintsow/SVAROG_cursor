import { useEffect, useState } from 'react'
import axios from 'axios'
import './WeatherForecast.scss'

const WeatherForecast = () => {
  const [weatherData, setWeatherData] = useState(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)

  // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –°–∞—Ä–∞—Ç–æ–≤–∞
  const latitude = 51.5335
  const longitude = 46.0343

  const fetchWeatherData = async () => {
    try {
      const response = await axios.get(
        'https://api.open-meteo.com/v1/forecast',
        {
          params: {
            latitude,
            longitude,
            current: 'weathercode,temperature_2m,wind_speed_10m',
            daily:
              'weathercode,temperature_2m_max,temperature_2m_min,relative_humidity_2m_max,relative_humidity_2m_min,wind_speed_10m_max',
            timezone: 'Europe/Moscow',
          },
        }
      )

      setWeatherData(response.data)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ:', error)
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ')
    } finally {
      setLoading(false)
    }
  }

  useEffect(() => {
    fetchWeatherData()
  }, [])

  if (loading) {
    return <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
  }

  if (error) {
    return <div className="error">{error}</div>
  }

  if (!weatherData) {
    return <div className="error">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ.</div>
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–∏–º–≤–æ–ª—ã –¥–ª—è –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
  const weatherIcons = {
    0: '‚òÄÔ∏è', // –Ø—Å–Ω–æ
    1: 'üå§Ô∏è', // –ú–∞–ª—ã–µ –æ–±–ª–∞–∫–∞
    2: 'üå•Ô∏è', // –û–±–ª–∞—á–Ω–æ
    3: 'üå¶Ô∏è', // –õ–µ–≥–∫–∏–π –¥–æ–∂–¥—å
    4: 'üåßÔ∏è', // –î–æ–∂–¥—å
    5: '‚ùÑÔ∏è', // –°–Ω–µ–≥
    6: 'üå©Ô∏è', // –ì—Ä–æ–∑–∞
  }

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  return (
    <div className="weather-card">
      <div className="current-weather">
        <h4 className="weather-title">–ü–æ–≥–æ–¥–∞ –≤ –°–∞—Ä–∞—Ç–æ–≤–µ</h4>
        <h4 className="weather-title">–°–µ–π—á–∞—Å</h4>
        <p>
          {weatherIcons[weatherData.current.weathercode]}{' '}
          {weatherData.current.temperature_2m}¬∞C, –í–µ—Ç–µ—Ä:{' '}
          {weatherData.current.wind_speed_10m} –º/—Å
        </p>
      </div>
      <div className="daily-forecast">
        <h4 className="weather-title">–ü—Ä–æ–≥–Ω–æ–∑</h4>
        <div className="forecast-items">
          {weatherData.daily.time.slice(2, 4).map((date, index) => (
            <div key={index} className="daily-item">
              <p>
                {new Date(date).toLocaleDateString()}:{' '}
                {weatherIcons[weatherData.daily.weathercode[index]]}{' '}
                {weatherData.daily.temperature_2m_max[index]}¬∞/
                {weatherData.daily.temperature_2m_min[index]}¬∞
              </p>
            </div>
          ))}
        </div>
      </div>
    </div>
  )
}

export default WeatherForecast
